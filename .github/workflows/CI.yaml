# SPDX-FileCopyrightText: 2022 Shun Sakai
#
# SPDX-License-Identifier: Apache-2.0 OR MIT

name: CI

on:
  pull_request:
  push:
    branches:
      - "develop"
      - "master"
  schedule:
    - cron: "0 0 * * 0"

jobs:
  check:
    name: Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os-alias:
          - ubuntu
          - macos
          - windows
        toolchain-alias:
          - msrv
          - stable
        include:
          - os-alias: ubuntu
            os: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
          - os-alias: macos
            os: macos-14
            target: aarch64-apple-darwin
          - os-alias: windows
            os: windows-2022
            target: x86_64-pc-windows-msvc
          - toolchain-alias: msrv
            toolchain: 1.85.0
          - toolchain-alias: stable
            toolchain: stable
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          targets: ${{ matrix.target }}
      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2.8.0
        with:
          key: ${{ matrix.target }}
      - name: Check a package
        run: cargo check --target ${{ matrix.target }}
      - name: Check a package (no default features)
        run: cargo check --target ${{ matrix.target }} --no-default-features

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os-alias:
          - ubuntu
          - macos
          - windows
        toolchain-alias:
          - msrv
          - stable
        include:
          - os-alias: ubuntu
            os: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
          - os-alias: macos
            os: macos-14
            target: aarch64-apple-darwin
          - os-alias: windows
            os: windows-2022
            target: x86_64-pc-windows-msvc
          - toolchain-alias: msrv
            toolchain: 1.85.0
          - toolchain-alias: stable
            toolchain: stable
    steps:
      - name: Set Git to use LF
        if: matrix.os == 'windows-2022'
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          targets: ${{ matrix.target }}
      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2.8.0
        with:
          key: ${{ matrix.target }}
      - name: Run tests
        run: cargo test --target ${{ matrix.target }}
      - name: Run tests (no default features)
        run: cargo test --target ${{ matrix.target }} --no-default-features

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2.8.0
      - name: Run formatter in check mode
        run: cargo fmt -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy
      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2.8.0
      - name: Run linter
        run: cargo clippy -- -D warnings
      - name: Run linter (no default features)
        run: cargo clippy --no-default-features -- -D warnings

  prettier:
    name: Prettier
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Setup Node.js environment
        uses: actions/setup-node@v5
        with:
          node-version: 22
      - name: Run formatter in check mode
        run: npx prettier -c "**.{hbs,json,md,yaml,yml}"
